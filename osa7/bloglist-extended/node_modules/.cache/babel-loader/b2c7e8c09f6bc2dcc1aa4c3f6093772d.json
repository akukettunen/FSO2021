{"ast":null,"code":"var _jsxFileName = \"/Users/akukettunen/Desktop/FS2021/osa7/bloglist-extended/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport blogService from './services/blogs';\nimport Toggleable from './components/Toggleable';\nimport BlogForm from './components/BlogForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showNotification } from './reducers/notificationReducer';\nimport { initBlogs, addBlog, like, deleteBlog } from './reducers/blogReducer';\nimport { loginUser, logoutUser, initUser } from './reducers/userReducer';\nimport { TextField, Button, Card, CardContent, CardActions, Typography, Container } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const toggleableRef = useRef();\n  const dispatch = useDispatch();\n  const blogs = useSelector(state => state.blogs);\n  const user = useSelector(state => state.user); // useEffect(() => {\n  //   dispatch(initUser())\n  //   alert('user: ', JSON.stringify(user))\n  //   if(user && user.token) {\n  //     blogService.setToken(user.token)\n  //     dispatch(initBlogs())\n  //   }\n  // }, [])\n\n  useEffect(async () => {\n    const loggedUserJSON = window.localStorage.getItem('blogUser');\n\n    if (loggedUserJSON) {\n      await dispatch(initUser(loggedUserJSON));\n    }\n\n    if (loggedUserJSON) {\n      blogService.setToken(loggedUserJSON.token);\n      dispatch(initBlogs());\n    }\n  }, []);\n\n  const notification = async ({\n    type,\n    text,\n    duration\n  }) => {\n    dispatch(showNotification({\n      type,\n      text,\n      duration,\n      visible: true\n    }));\n  };\n\n  const logout = () => {\n    window.localStorage.removeItem('blogUser');\n    blogService.setToken(null);\n    dispatch(logoutUser());\n    notification({\n      type: 'success',\n      text: 'logged out'\n    });\n  };\n\n  const login = () => {\n    dispatch(loginUser({\n      username,\n      password\n    }));\n    setUsername('');\n    setPassword('');\n    dispatch(initBlogs());\n  };\n\n  const newBlog = ({\n    e,\n    blogAuthor,\n    blogTitle,\n    blogUrl\n  }) => {\n    e.preventDefault();\n    dispatch(addBlog({\n      author: blogAuthor,\n      title: blogTitle,\n      url: blogUrl\n    }));\n    toggleableRef.current.toggleVisibility();\n  };\n\n  const liked = blog => {\n    dispatch(like(blog));\n  };\n\n  const deleted = id => {\n    dispatch(deleteBlog(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      variant: \"h3\",\n      component: \"div\",\n      children: \"blogs.io\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"username\",\n          id: \"username\",\n          value: username,\n          onChange: ({\n            target\n          }) => setUsername(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 135\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"*******\",\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: ({\n            target\n          }) => setPassword(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"loginButton\",\n          onClick: login,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Toggleable, {\n        buttonLabel: \"show form\",\n        ref: toggleableRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'marginBottom': '30px'\n          },\n          children: /*#__PURE__*/_jsxDEV(BlogForm, {\n            addBlog: newBlog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this), [...blogs].sort((a, b) => {\n        return b.likes - a.likes;\n      }).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        liked: () => liked(blog),\n        deleted: () => deleted(blog.id)\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2iE95nUufPGYBviaGCDFmX9Cgng=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa7/bloglist-extended/src/App.js"],"names":["React","useState","useEffect","useRef","Blog","Notification","blogService","Toggleable","BlogForm","useDispatch","useSelector","showNotification","initBlogs","addBlog","like","deleteBlog","loginUser","logoutUser","initUser","TextField","Button","Card","CardContent","CardActions","Typography","Container","App","username","setUsername","password","setPassword","toggleableRef","dispatch","blogs","state","user","loggedUserJSON","window","localStorage","getItem","setToken","token","notification","type","text","duration","visible","logout","removeItem","login","newBlog","e","blogAuthor","blogTitle","blogUrl","preventDefault","author","title","url","current","toggleVisibility","liked","blog","deleted","id","target","value","sort","a","b","likes","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport Toggleable from './components/Toggleable'\nimport BlogForm from './components/BlogForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { showNotification } from './reducers/notificationReducer'\nimport { initBlogs, addBlog, like, deleteBlog } from './reducers/blogReducer'\nimport { loginUser, logoutUser, initUser } from './reducers/userReducer'\nimport { TextField, Button, Card, CardContent, CardActions, Typography, Container } from '@mui/material'\n\nconst App = () => {\n  // const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const toggleableRef = useRef()\n  const dispatch = useDispatch()\n  const blogs = useSelector(state => state.blogs)\n  const user = useSelector(state => state.user)\n\n  // useEffect(() => {\n  //   dispatch(initUser())\n  //   alert('user: ', JSON.stringify(user))\n  //   if(user && user.token) {\n  //     blogService.setToken(user.token)\n  //     dispatch(initBlogs())\n  //   }\n  // }, [])\n\n  useEffect(async () => {\n    const loggedUserJSON = window.localStorage.getItem('blogUser')\n    if (loggedUserJSON) {\n      await dispatch(initUser(loggedUserJSON))\n    }\n\n    if(loggedUserJSON) {\n      blogService.setToken(loggedUserJSON.token)\n      dispatch(initBlogs())\n    }\n  }, [])\n\n  const notification = async ({ type, text, duration }) => {\n    dispatch(showNotification({ type, text, duration, visible: true }))\n  }\n\n  const logout = () => {\n    window.localStorage.removeItem('blogUser')\n    blogService.setToken(null)\n    dispatch(logoutUser())\n    notification({ type: 'success', text: 'logged out' })\n  }\n\n  const login = () => {\n    dispatch(loginUser({ username, password }))\n    setUsername('')\n    setPassword('')\n    dispatch(initBlogs())\n  }\n\n  const newBlog = ({ e, blogAuthor, blogTitle, blogUrl }) => {\n    e.preventDefault()\n    dispatch(addBlog({ author: blogAuthor, title: blogTitle, url: blogUrl }))\n\n    toggleableRef.current.toggleVisibility()\n  }\n\n  const liked = blog => {\n    dispatch(like(blog))\n  }\n\n  const deleted = id => {\n    dispatch(deleteBlog(id))\n  }\n\n\n  return (\n    <Container>\n      <Typography gutterBottom variant=\"h3\" component=\"div\">blogs.io</Typography>\n      {\n        !user &&\n          <Card>\n            <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              Login\n            </Typography>\n              <TextField placeholder=\"username\" id=\"username\" value={username} onChange={({ target }) => setUsername(target.value)} /><br></br>\n              <TextField placeholder=\"*******\" id=\"password\" type=\"password\" value={password} onChange={({ target }) => setPassword(target.value)} />\n            </CardContent>\n            <CardActions>\n              <Button id=\"loginButton\" onClick={login}>login</Button>\n            </CardActions>\n          </Card>\n      }\n      {\n        <Notification></Notification>\n      }\n      {\n        user &&\n            <>\n              { user.username } <button onClick={logout}>logout</button>\n              <Toggleable buttonLabel=\"show form\" ref={toggleableRef}>\n                <div style={{ 'marginBottom': '30px' }}>\n                  <BlogForm addBlog={newBlog}></BlogForm>\n                </div>\n              </Toggleable>\n              {\n                [...blogs].sort((a, b) => {return b.likes - a.likes}).map(blog =>\n                  <Blog key={blog.id} blog={ blog } liked={() => liked(blog)} deleted={() => deleted(blog.id)} />\n                )\n              }\n            </>\n      }\n    </Container>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}