{"ast":null,"code":"import loginService from '../services/login';\nimport { showNotification } from './notificationReducer';\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport const loginUser = user => {\n  return async dispatch => {\n    loginService.login(user).then(e => {\n      dispatch({\n        type: 'LOGIN',\n        data: e.data\n      });\n      window.localStorage.setItem('blogUser', JSON.stringify(e.data));\n      loginService.setToken(e.data.token);\n      dispatch(showNotification({\n        type: 'success',\n        text: 'kirjautuminen onnistui!',\n        duration: 5000,\n        visible: true\n      }));\n    }).catch(e => {\n      dispatch(showNotification({\n        type: 'alert',\n        text: e.response.data.error,\n        duration: 5000,\n        visible: true\n      }));\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa7/bloglist-extended/src/reducers/userReducer.js"],"names":["loginService","showNotification","reducer","state","action","type","data","loginUser","user","dispatch","login","then","e","window","localStorage","setItem","JSON","stringify","setToken","token","text","duration","visible","catch","response","error"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,OAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AAEA,aAAOH,KAAP;AALF;AAOD,CARD;;AAUA,OAAO,MAAMI,SAAS,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAMC,QAAN,IAAkB;AACvBT,IAAAA,YAAY,CAACU,KAAb,CAAmBF,IAAnB,EACGG,IADH,CACQC,CAAC,IAAI;AACTH,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,IAAI,EAAEM,CAAC,CAACN;AAFD,OAAD,CAAR;AAKAO,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeL,CAAC,CAACN,IAAjB,CAAxC;AACAN,MAAAA,YAAY,CAACkB,QAAb,CAAsBN,CAAC,CAACN,IAAF,CAAOa,KAA7B;AAEAV,MAAAA,QAAQ,CAACR,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,SAAR;AAAmBe,QAAAA,IAAI,EAAE,yBAAzB;AAAoDC,QAAAA,QAAQ,EAAE,IAA9D;AAAoEC,QAAAA,OAAO,EAAE;AAA7E,OAAD,CAAjB,CAAR;AACD,KAXH,EAYGC,KAZH,CAYSX,CAAC,IAAI;AACVH,MAAAA,QAAQ,CAACR,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,OAAR;AAAiBe,QAAAA,IAAI,EAAER,CAAC,CAACY,QAAF,CAAWlB,IAAX,CAAgBmB,KAAvC;AAA8CJ,QAAAA,QAAQ,EAAE,IAAxD;AAA8DC,QAAAA,OAAO,EAAE;AAAvE,OAAD,CAAjB,CAAR;AACD,KAdH;AAeD,GAhBD;AAiBD,CAlBM;AAoBP,eAAepB,OAAf","sourcesContent":["import loginService from '../services/login'\nimport { showNotification } from './notificationReducer'\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n    case 'LOGIN':\n      return action.data\n    default:\n\n    return state\n  }\n}\n\nexport const loginUser = (user) => {\n  return async dispatch => {\n    loginService.login(user)\n      .then(e => {\n        dispatch({\n          type: 'LOGIN',\n          data: e.data\n        })\n\n        window.localStorage.setItem('blogUser', JSON.stringify(e.data))\n        loginService.setToken(e.data.token)\n\n        dispatch(showNotification({ type: 'success', text: 'kirjautuminen onnistui!', duration: 5000, visible: true }))\n      })\n      .catch(e => {\n        dispatch(showNotification({ type: 'alert', text: e.response.data.error, duration: 5000, visible: true }))\n      })\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}