{"ast":null,"code":"import blogService from '../services/blogs';\nimport loginService from '../services/login';\nimport { showNotification } from './notificationReducer';\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data;\n\n    case 'LOGOUT':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport const initUser = () => {\n  let user = window.localStorage.getItem('blogUser');\n  alert('täälä: ', user);\n\n  if (user) {\n    return {\n      type: 'LOGIN',\n      data: JSON.parse(user)\n    };\n  }\n};\nexport const loginUser = user => {\n  alert('login user');\n  return async dispatch => {\n    loginService.login(user).then(e => {\n      dispatch({\n        type: 'LOGIN',\n        data: e.data\n      });\n      alert('logged user');\n      window.localStorage.setItem('blogUser', JSON.stringify(e.data));\n      blogService.setToken(e.data.token);\n      dispatch(showNotification({\n        type: 'success',\n        text: 'kirjautuminen onnistui!',\n        duration: 5000,\n        visible: true\n      }));\n    }).catch(e => {\n      alert(e);\n      dispatch(showNotification({\n        type: 'alert',\n        text: 'Jotain meni pieleen',\n        duration: 5000,\n        visible: true\n      }));\n    });\n  };\n};\nexport const logoutUser = () => {\n  window.localStorage.removeItem('blogUser');\n  return {\n    type: 'LOGOUT'\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa7/bloglist-extended/src/reducers/userReducer.js"],"names":["blogService","loginService","showNotification","reducer","state","action","type","data","initUser","user","window","localStorage","getItem","alert","JSON","parse","loginUser","dispatch","login","then","e","setItem","stringify","setToken","token","text","duration","visible","catch","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACxC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,OAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF,SAAK,QAAL;AACE,aAAO,IAAP;;AACF;AAEA,aAAOH,KAAP;AAPF;AASD,CAVD;;AAYA,OAAO,MAAMI,QAAQ,GAAG,MAAM;AAC5B,MAAIC,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX;AACAC,EAAAA,KAAK,CAAC,SAAD,EAAYJ,IAAZ,CAAL;;AACA,MAAGA,IAAH,EAAS;AACP,WAAO;AACLH,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,IAAI,EAAEO,IAAI,CAACC,KAAL,CAAWN,IAAX;AAFD,KAAP;AAID;AACF,CATM;AAWP,OAAO,MAAMO,SAAS,GAAIP,IAAD,IAAU;AACjCI,EAAAA,KAAK,CAAC,YAAD,CAAL;AACA,SAAO,MAAMI,QAAN,IAAkB;AACvBhB,IAAAA,YAAY,CAACiB,KAAb,CAAmBT,IAAnB,EACGU,IADH,CACQC,CAAC,IAAI;AACTH,MAAAA,QAAQ,CAAC;AACPX,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,IAAI,EAAEa,CAAC,CAACb;AAFD,OAAD,CAAR;AAKAM,MAAAA,KAAK,CAAC,aAAD,CAAL;AAEAH,MAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,UAA5B,EAAwCP,IAAI,CAACQ,SAAL,CAAeF,CAAC,CAACb,IAAjB,CAAxC;AACAP,MAAAA,WAAW,CAACuB,QAAZ,CAAqBH,CAAC,CAACb,IAAF,CAAOiB,KAA5B;AAEAP,MAAAA,QAAQ,CAACf,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,SAAR;AAAmBmB,QAAAA,IAAI,EAAE,yBAAzB;AAAoDC,QAAAA,QAAQ,EAAE,IAA9D;AAAoEC,QAAAA,OAAO,EAAE;AAA7E,OAAD,CAAjB,CAAR;AACD,KAbH,EAcGC,KAdH,CAcUR,CAAD,IAAO;AACZP,MAAAA,KAAK,CAACO,CAAD,CAAL;AACAH,MAAAA,QAAQ,CAACf,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,OAAR;AAAiBmB,QAAAA,IAAI,EAAE,qBAAvB;AAA8CC,QAAAA,QAAQ,EAAE,IAAxD;AAA8DC,QAAAA,OAAO,EAAE;AAAvE,OAAD,CAAjB,CAAR;AACD,KAjBH;AAkBD,GAnBD;AAoBD,CAtBM;AAwBP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC9BnB,EAAAA,MAAM,CAACC,YAAP,CAAoBmB,UAApB,CAA+B,UAA/B;AACA,SAAO;AACLxB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CALM;AAOP,eAAeH,OAAf","sourcesContent":["import blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport { showNotification } from './notificationReducer'\n\nconst reducer = (state = null, action) => {\n  switch(action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return null\n    default:\n\n    return state\n  }\n}\n\nexport const initUser = () => {\n  let user = window.localStorage.getItem('blogUser')\n  alert('täälä: ', user)\n  if(user) {\n    return {\n      type: 'LOGIN',\n      data: JSON.parse(user)\n    }\n  }\n}\n\nexport const loginUser = (user) => {\n  alert('login user')\n  return async dispatch => {\n    loginService.login(user)\n      .then(e => {\n        dispatch({\n          type: 'LOGIN',\n          data: e.data\n        })\n\n        alert('logged user')\n\n        window.localStorage.setItem('blogUser', JSON.stringify(e.data))\n        blogService.setToken(e.data.token)\n\n        dispatch(showNotification({ type: 'success', text: 'kirjautuminen onnistui!', duration: 5000, visible: true }))\n      })\n      .catch((e) => {\n        alert(e)\n        dispatch(showNotification({ type: 'alert', text: 'Jotain meni pieleen', duration: 5000, visible: true }))\n      })\n  }\n}\n\nexport const logoutUser = () => {\n  window.localStorage.removeItem('blogUser')\n  return {\n    type: 'LOGOUT'\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}