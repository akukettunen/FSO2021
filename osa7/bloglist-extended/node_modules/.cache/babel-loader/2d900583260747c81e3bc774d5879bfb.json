{"ast":null,"code":"import blogService from '../services/blogs';\nimport loginService from '../services/login';\nimport { showNotification } from './notificationReducer';\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data;\n\n    case 'LOGOUT':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport const initUser = () => {\n  return dispatch => {\n    let user = window.localStorage.getItem('blogUser');\n\n    if (user) {\n      return dispatch({\n        type: 'LOGIN',\n        data: JSON.parse(user)\n      });\n    }\n  };\n};\nexport const loginUser = user => {\n  return async dispatch => {\n    loginService.login(user).then(e => {\n      dispatch({\n        type: 'LOGIN',\n        data: e.data\n      });\n      window.localStorage.setItem('blogUser', JSON.stringify(e.data));\n      blogService.setToken(e.data.token);\n      dispatch(showNotification({\n        type: 'success',\n        text: 'kirjautuminen onnistui!',\n        duration: 5000,\n        visible: true\n      }));\n    }).catch(e => {\n      alert(e);\n      dispatch(showNotification({\n        type: 'alert',\n        text: 'Jotain meni pieleen',\n        duration: 5000,\n        visible: true\n      }));\n    });\n  };\n};\nexport const logoutUser = () => {\n  window.localStorage.removeItem('blogUser');\n  return {\n    type: 'LOGOUT'\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa7/bloglist-extended/src/reducers/userReducer.js"],"names":["blogService","loginService","showNotification","reducer","state","action","type","data","initUser","dispatch","user","window","localStorage","getItem","JSON","parse","loginUser","login","then","e","setItem","stringify","setToken","token","text","duration","visible","catch","alert","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACxC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,OAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF,SAAK,QAAL;AACE,aAAO,IAAP;;AACF;AAEA,aAAOH,KAAP;AAPF;AASD,CAVD;;AAYA,OAAO,MAAMI,QAAQ,GAAG,MAAM;AAC5B,SAAOC,QAAQ,IAAI;AACjB,QAAIC,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX;;AACA,QAAGH,IAAH,EAAS;AACP,aAAOD,QAAQ,CAAC;AACdH,QAAAA,IAAI,EAAE,OADQ;AAEdC,QAAAA,IAAI,EAAEO,IAAI,CAACC,KAAL,CAAWL,IAAX;AAFQ,OAAD,CAAf;AAID;AACF,GARD;AASD,CAVM;AAYP,OAAO,MAAMM,SAAS,GAAIN,IAAD,IAAU;AACjC,SAAO,MAAMD,QAAN,IAAkB;AACvBR,IAAAA,YAAY,CAACgB,KAAb,CAAmBP,IAAnB,EACGQ,IADH,CACQC,CAAC,IAAI;AACTV,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,IAAI,EAAEY,CAAC,CAACZ;AAFD,OAAD,CAAR;AAKAI,MAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,UAA5B,EAAwCN,IAAI,CAACO,SAAL,CAAeF,CAAC,CAACZ,IAAjB,CAAxC;AACAP,MAAAA,WAAW,CAACsB,QAAZ,CAAqBH,CAAC,CAACZ,IAAF,CAAOgB,KAA5B;AAEAd,MAAAA,QAAQ,CAACP,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,SAAR;AAAmBkB,QAAAA,IAAI,EAAE,yBAAzB;AAAoDC,QAAAA,QAAQ,EAAE,IAA9D;AAAoEC,QAAAA,OAAO,EAAE;AAA7E,OAAD,CAAjB,CAAR;AACD,KAXH,EAYGC,KAZH,CAYUR,CAAD,IAAO;AACZS,MAAAA,KAAK,CAACT,CAAD,CAAL;AACAV,MAAAA,QAAQ,CAACP,gBAAgB,CAAC;AAAEI,QAAAA,IAAI,EAAE,OAAR;AAAiBkB,QAAAA,IAAI,EAAE,qBAAvB;AAA8CC,QAAAA,QAAQ,EAAE,IAAxD;AAA8DC,QAAAA,OAAO,EAAE;AAAvE,OAAD,CAAjB,CAAR;AACD,KAfH;AAgBD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC9BlB,EAAAA,MAAM,CAACC,YAAP,CAAoBkB,UAApB,CAA+B,UAA/B;AACA,SAAO;AACLxB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CALM;AAOP,eAAeH,OAAf","sourcesContent":["import blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport { showNotification } from './notificationReducer'\n\nconst reducer = (state = null, action) => {\n  switch(action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return null\n    default:\n\n    return state\n  }\n}\n\nexport const initUser = () => {\n  return dispatch => {\n    let user = window.localStorage.getItem('blogUser')\n    if(user) {\n      return dispatch({\n        type: 'LOGIN',\n        data: JSON.parse(user)\n      })\n    }\n  }\n}\n\nexport const loginUser = (user) => {\n  return async dispatch => {\n    loginService.login(user)\n      .then(e => {\n        dispatch({\n          type: 'LOGIN',\n          data: e.data\n        })\n\n        window.localStorage.setItem('blogUser', JSON.stringify(e.data))\n        blogService.setToken(e.data.token)\n\n        dispatch(showNotification({ type: 'success', text: 'kirjautuminen onnistui!', duration: 5000, visible: true }))\n      })\n      .catch((e) => {\n        alert(e)\n        dispatch(showNotification({ type: 'alert', text: 'Jotain meni pieleen', duration: 5000, visible: true }))\n      })\n  }\n}\n\nexport const logoutUser = () => {\n  window.localStorage.removeItem('blogUser')\n  return {\n    type: 'LOGOUT'\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}