{"ast":null,"code":"import blogService from '../services/blogs'; // import showNotification from './notificationReducer'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.data];\n\n    case 'INIT':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport const addBlog = ({\n  blogAuthor,\n  blogTitle,\n  blogUrl\n}) => {\n  alert('mo0ro');\n  return async dispatch => {\n    blogService.post({\n      author: blogAuthor,\n      title: blogTitle,\n      url: blogUrl\n    }).then(e => {\n      alert(e.data);\n      dispatch({\n        type: 'ADD',\n        data: e.data\n      }); // dispatch(showNotification({ type: 'success', text: 'blogin lis채채minen onnistui!' }))\n    }).catch(e => {\n      alert(e); // dispatch(showNotification({ type: 'success', text: e.response ? e.response.data.error : 'Jotain meni vikaan :(' }))\n    });\n  };\n};\nexport const initBlogs = () => {\n  return async dispatch => {\n    blogService.getAll().then(blogs => {\n      dispatch({\n        type: 'INIT',\n        data: blogs\n      });\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa7/bloglist-extended/src/reducers/blogReducer.js"],"names":["blogService","reducer","state","action","type","data","addBlog","blogAuthor","blogTitle","blogUrl","alert","dispatch","post","author","title","url","then","e","catch","initBlogs","getAll","blogs"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,KAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,IAAlB,CAAP;;AACF,SAAK,MAAL;AACE,aAAOF,MAAM,CAACE,IAAd;;AACF;AAEA,aAAOH,KAAP;AAPF;AASD,CAVD;;AAYA,OAAO,MAAMI,OAAO,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AAC7DC,EAAAA,KAAK,CAAC,OAAD,CAAL;AACA,SAAO,MAAMC,QAAN,IAAkB;AACvBX,IAAAA,WAAW,CAACY,IAAZ,CAAiB;AAAEC,MAAAA,MAAM,EAAEN,UAAV;AAAsBO,MAAAA,KAAK,EAAEN,SAA7B;AAAwCO,MAAAA,GAAG,EAAEN;AAA7C,KAAjB,EACGO,IADH,CACQC,CAAC,IAAI;AACTP,MAAAA,KAAK,CAACO,CAAC,CAACZ,IAAH,CAAL;AACAM,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,IAAI,EAAEY,CAAC,CAACZ;AAAvB,OAAD,CAAR,CAFS,CAGT;AACD,KALH,EAMGa,KANH,CAMSD,CAAC,IAAI;AACVP,MAAAA,KAAK,CAACO,CAAD,CAAL,CADU,CAEV;AACD,KATH;AAUD,GAXD;AAYD,CAdM;AAgBP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,SAAO,MAAMR,QAAN,IAAkB;AACvBX,IAAAA,WAAW,CAACoB,MAAZ,GAAqBJ,IAArB,CAA0BK,KAAK,IAAI;AACjCV,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAE,MADC;AAEPC,QAAAA,IAAI,EAAEgB;AAFC,OAAD,CAAR;AAID,KALD;AAMD,GAPD;AAQD,CATM;AAWP,eAAepB,OAAf","sourcesContent":["import blogService from '../services/blogs'\n// import showNotification from './notificationReducer'\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD':\n      return [...state, action.data]\n    case 'INIT':\n      return action.data\n    default:\n\n    return state\n  }\n}\n\nexport const addBlog = ({ blogAuthor, blogTitle, blogUrl }) => {\n  alert('mo0ro')\n  return async dispatch => {\n    blogService.post({ author: blogAuthor, title: blogTitle, url: blogUrl })\n      .then(e => {\n        alert(e.data)\n        dispatch({ type: 'ADD', data: e.data })\n        // dispatch(showNotification({ type: 'success', text: 'blogin lis채채minen onnistui!' }))\n      })\n      .catch(e => {\n        alert(e)\n        // dispatch(showNotification({ type: 'success', text: e.response ? e.response.data.error : 'Jotain meni vikaan :(' }))\n      })\n  }\n}\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    blogService.getAll().then(blogs => {\n      dispatch({\n        type: 'INIT',\n        data: blogs\n      })\n    })\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}