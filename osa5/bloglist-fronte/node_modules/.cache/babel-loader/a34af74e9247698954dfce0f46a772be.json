{"ast":null,"code":"var _jsxFileName = \"/Users/akukettunen/Desktop/FS2021/osa5/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [blogTitle, setBlogTitle] = useState('');\n  const [blogAuthor, setBlogAuthor] = useState('');\n  const [blogUrl, setBlogUrl] = useState('');\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState({\n    text: '',\n    type: 'success',\n    visible: false\n  });\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n\n  const showNotification = ({\n    type,\n    text,\n    duration\n  }) => {\n    duration = duration || 3000;\n    setNotification({\n      type,\n      text,\n      visible: true\n    });\n    setTimeout(() => {\n      setNotification({\n        type: 'success',\n        text: '',\n        visible: false\n      });\n    }, duration);\n  };\n\n  const logout = () => {\n    window.localStorage.removeItem('blogUser');\n    blogService.setToken(null);\n    setUser(null);\n    showNotification({\n      type: 'success',\n      text: 'logged out'\n    });\n  };\n\n  const login = () => {\n    loginService.login({\n      username,\n      password\n    }).then(e => {\n      setUser(e.data);\n      setUsername('');\n      setPassword('');\n      window.localStorage.setItem('blogUser', JSON.stringify(e.data));\n      showNotification({\n        type: 'success',\n        text: 'kirjautuminen onnistui!'\n      });\n    }).catch(e => {\n      showNotification({\n        type: 'alert',\n        text: e.response.data.error\n      });\n    });\n  };\n\n  const addBlog = e => {\n    e.preventDefault();\n    blogService.post({\n      author: blogAuthor,\n      title: blogTitle,\n      url: blogUrl\n    }).then(e => {\n      setBlogs(blogs.concat(e));\n      setBlogAuthor('');\n      setBlogUrl('');\n      setBlogTitle('');\n      showNotification({\n        type: 'success',\n        text: 'blogin lisääminen onnistui!'\n      });\n    }).catch(e => {\n      showNotification({\n        type: 'success',\n        text: e.response.data.error\n      });\n    });\n  };\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('blogUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: ({\n          target\n        }) => setUsername(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 90\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: ({\n          target\n        }) => setPassword(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), notification.visible && /*#__PURE__*/_jsxDEV(Notification, {\n      text: notification.text,\n      type: notification.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'marginBottom': '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"+ New blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addBlog,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: blogTitle,\n            placeholder: \"title\",\n            onChange: ({\n              target\n            }) => setBlogTitle(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 117\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: blogAuthor,\n            placeholder: \"author\",\n            onChange: ({\n              target\n            }) => setBlogAuthor(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 120\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: blogUrl,\n            placeholder: \"url\",\n            onChange: ({\n              target\n            }) => setBlogUrl(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7FgwevRdgPr8tAQTJAko90W3/h8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","App","blogs","setBlogs","username","setUsername","password","setPassword","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","user","setUser","notification","setNotification","text","type","visible","getAll","then","showNotification","duration","setTimeout","logout","window","localStorage","removeItem","setToken","login","e","data","setItem","JSON","stringify","catch","response","error","addBlog","preventDefault","post","author","title","url","concat","loggedUserJSON","getItem","parse","token","target","value","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [blogTitle, setBlogTitle] = useState('')\n  const [blogAuthor, setBlogAuthor] = useState('')\n  const [blogUrl, setBlogUrl] = useState('')\n  const [user, setUser] = useState(null)\n  const [notification, setNotification] = useState({text: '', type: 'success', visible: false})\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  const showNotification = ({type, text, duration}) => {\n    duration = duration || 3000\n    setNotification({type, text, visible: true})\n    setTimeout(() => {\n      setNotification({type: 'success', text: '', visible: false})\n    }, duration)\n  }\n\n  const logout = () => {\n    window.localStorage.removeItem('blogUser')\n    blogService.setToken(null)\n    setUser(null)\n    showNotification({type: 'success', text: 'logged out'})\n  }\n\n  const login = () => {\n    loginService.login({username, password})\n      .then(e => {\n        setUser(e.data)\n        setUsername('')\n        setPassword('')\n        window.localStorage.setItem('blogUser', JSON.stringify(e.data))\n        showNotification({type: 'success', text: 'kirjautuminen onnistui!'})\n      })\n      .catch(e => {\n        showNotification({type: 'alert', text: e.response.data.error})\n      })\n  }\n\n  const addBlog = (e) => {\n    e.preventDefault()\n    blogService.post({author: blogAuthor, title: blogTitle, url: blogUrl })\n      .then(e => {\n        setBlogs(blogs.concat(e))\n        setBlogAuthor('')\n        setBlogUrl('')\n        setBlogTitle('')\n        showNotification({type: 'success', text: 'blogin lisääminen onnistui!'})\n      })\n      .catch(e => {\n        showNotification({type: 'success', text: e.response.data.error})\n      })\n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('blogUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      {\n        !user &&\n          <div>\n            <h4>login</h4>\n\n            <input value={username} onChange={({target}) => setUsername(target.value)} /><br></br>\n            <input type=\"password\" value={password} onChange={({target}) => setPassword(target.value)} />\n            <button onClick={login}>login</button>\n          </div> \n      }\n      {\n        notification.visible &&\n        <Notification text={notification.text} type={notification.type}></Notification>\n      }\n      {\n        user &&\n            <>\n              {user.username} <button onClick={logout}>logout</button>\n              <div style={{'marginBottom': '30px'}}>\n                <h3>+ New blog</h3>\n                <form onSubmit={addBlog}>\n                  <input value={blogTitle} placeholder=\"title\" onChange={({target}) => setBlogTitle(target.value)}/><br/>\n                  <input value={blogAuthor} placeholder=\"author\" onChange={({target}) => setBlogAuthor(target.value)}/><br/>\n                  <input value={blogUrl} placeholder=\"url\" onChange={({target}) => setBlogUrl(target.value)}/>\n                  <button type=\"submit\">send</button>\n                </form>\n              </div>\n              {\n                blogs.map(blog =>\n                  <Blog key={blog.id} blog={blog} />\n                )\n              }\n            </>\n      }\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}