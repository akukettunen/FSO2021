{"ast":null,"code":"import service from '../services/anecdoteService';\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'VOTE':\n      console.log(action.data);\n      const {\n        id\n      } = action.data;\n      const anecdote = state.find(n => n.id === id);\n      const votedAnecdote = { ...anecdote,\n        votes: anecdote.votes + 1\n      };\n      return state.map(a => a.id === id ? votedAnecdote : a);\n\n    case 'ADD':\n      return [...state, action.data];\n\n    case 'INIT':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport const voteAnecdote = anecdote => {\n  return async dispatch => {\n    let voted = await service.vote(anecdote);\n    dispatch({\n      type: 'VOTE',\n      data: {\n        id: voted.id\n      }\n    });\n  };\n};\nexport const addAnecdote = anecdote => {\n  return async dispatch => {\n    let newAnec = await service.createNew(anecdote);\n    dispatch({\n      type: 'ADD',\n      data: newAnec\n    });\n  };\n};\nexport const init = () => {\n  return async dispatch => {\n    let anecdotes = await service.getAll();\n    dispatch({\n      type: 'INIT',\n      data: anecdotes\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa6/redux-anecdotes/src/reducers/anecdoteReducer.js"],"names":["service","getId","Math","random","toFixed","reducer","state","action","type","console","log","data","id","anecdote","find","n","votedAnecdote","votes","map","a","voteAnecdote","dispatch","voted","vote","addAnecdote","newAnec","createNew","init","anecdotes","getAll"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,6BAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM,CAAC,SAASC,IAAI,CAACC,MAAL,EAAV,EAAyBC,OAAzB,CAAiC,CAAjC,CAApB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,MAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAASL,MAAM,CAACI,IAAtB;AACA,YAAME,QAAQ,GAAGP,KAAK,CAACQ,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAzB,CAAjB;AACA,YAAMI,aAAa,GAAG,EAAC,GAAGH,QAAJ;AAAcI,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiB;AAAtC,OAAtB;AACA,aAAOX,KAAK,CAACY,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACP,EAAF,KAASA,EAAT,GAAcI,aAAd,GAA8BG,CAA7C,CAAP;;AACF,SAAK,KAAL;AACE,aAAO,CAAC,GAAGb,KAAJ,EAAWC,MAAM,CAACI,IAAlB,CAAP;;AACF,SAAK,MAAL;AACE,aAAOJ,MAAM,CAACI,IAAd;;AACF;AACA,aAAOL,KAAP;AAZF;AAcD,CAfD;;AAiBA,OAAO,MAAMc,YAAY,GAAGP,QAAQ,IAAI;AACtC,SAAO,MAAMQ,QAAN,IAAkB;AACvB,QAAIC,KAAK,GAAG,MAAMtB,OAAO,CAACuB,IAAR,CAAaV,QAAb,CAAlB;AACAQ,IAAAA,QAAQ,CAAC;AACPb,MAAAA,IAAI,EAAE,MADC;AAEPG,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEU,KAAK,CAACV;AAAZ;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMY,WAAW,GAAGX,QAAQ,IAAI;AACrC,SAAO,MAAMQ,QAAN,IAAkB;AACvB,QAAII,OAAO,GAAG,MAAMzB,OAAO,CAAC0B,SAAR,CAAkBb,QAAlB,CAApB;AACAQ,IAAAA,QAAQ,CAAC;AACPb,MAAAA,IAAI,EAAE,KADC;AAEPG,MAAAA,IAAI,EAAEc;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,IAAI,GAAG,MAAM;AACxB,SAAO,MAAMN,QAAN,IAAkB;AACvB,QAAIO,SAAS,GAAG,MAAM5B,OAAO,CAAC6B,MAAR,EAAtB;AACAR,IAAAA,QAAQ,CAAC;AACPb,MAAAA,IAAI,EAAE,MADC;AAEPG,MAAAA,IAAI,EAAEiB;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,eAAevB,OAAf","sourcesContent":["import service from '../services/anecdoteService'\n\nconst getId = () => (100000 * Math.random()).toFixed(0)\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n    case 'VOTE':\n      console.log(action.data)\n      const { id } = action.data\n      const anecdote = state.find(n => n.id === id)\n      const votedAnecdote = {...anecdote, votes: anecdote.votes + 1}\n      return state.map(a => a.id === id ? votedAnecdote : a)\n    case 'ADD':\n      return [...state, action.data]\n    case 'INIT':\n      return action.data\n    default:\n    return state\n  }\n}\n\nexport const voteAnecdote = anecdote => {\n  return async dispatch => {\n    let voted = await service.vote(anecdote)\n    dispatch({\n      type: 'VOTE',\n      data: { id: voted.id }\n    })\n  }\n}\n\nexport const addAnecdote = anecdote => {\n  return async dispatch => {\n    let newAnec = await service.createNew(anecdote)\n    dispatch({\n      type: 'ADD',\n      data: newAnec\n    })\n  }\n}\n\nexport const init = () => {\n  return async dispatch => {\n    let anecdotes = await service.getAll()\n    dispatch({\n      type: 'INIT',\n      data: anecdotes\n    })\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}