{"ast":null,"code":"var _jsxFileName = \"/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/components/Authors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { useMutation } from '@apollo/client';\nimport { EDIT_AUTHOR, ALL_AUTHORS } from './querys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authors = props => {\n  _s();\n\n  const [author, setAuthor] = useState('');\n  const [published, setPublished] = useState('');\n  const [addBook] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }]\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"born\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), props.authors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.born\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.bookCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, a.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Set birthyear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: props.authors.map(a => {\n          return {\n            value: a.name,\n            label: a.name\n          };\n        }),\n        onChange: e => setAuthor(e.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: published,\n        onChange: ({\n          target\n        }) => setPublished(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authors, \"Du7x2JR6JUkSxhbAjsxCupDkjF0=\", false, function () {\n  return [useMutation];\n});\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/components/Authors.js"],"names":["React","useState","Select","useMutation","EDIT_AUTHOR","ALL_AUTHORS","Authors","props","author","setAuthor","published","setPublished","addBook","refetchQueries","query","show","authors","map","a","name","born","bookCount","value","label","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAAEW,OAAF,IAAcT,WAAW,CAACC,WAAD,EAAc;AAC3CS,IAAAA,cAAc,EAAE,CAAE;AAAEC,MAAAA,KAAK,EAAET;AAAT,KAAF;AAD2B,GAAd,CAA/B;;AAIA,MAAI,CAACE,KAAK,CAACQ,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAUGR,KAAK,CAACS,OAAN,CAAcC,GAAd,CAAkBC,CAAC,iBAClB;AAAA,kCACE;AAAA,sBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKF,CAAC,CAACG;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASH,CAAC,CAACC,IAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAsBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EACLZ,KAAK,CAACS,OAAN,CAAcC,GAAd,CACEC,CAAC,IAAI;AACH,iBAAO;AAAEI,YAAAA,KAAK,EAAEJ,CAAC,CAACC,IAAX;AAAiBI,YAAAA,KAAK,EAAEL,CAAC,CAACC;AAA1B,WAAP;AACD,SAHH,CAFJ;AAQE,QAAA,QAAQ,EAAIK,CAAD,IAAOf,SAAS,CAACe,CAAC,CAACF,KAAH;AAR7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAEZ,SAFT;AAGE,QAAA,QAAQ,EAAE,CAAC;AAAEe,UAAAA;AAAF,SAAD,KAAgBd,YAAY,CAACc,MAAM,CAACH,KAAR;AAHxC;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CAtDD;;GAAMhB,O;UAIgBH,W;;;KAJhBG,O;AAwDN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Select from 'react-select'\nimport { useMutation } from '@apollo/client'\nimport { EDIT_AUTHOR, ALL_AUTHORS } from './querys'\n\nconst Authors = (props) => {\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n\n  const [ addBook ] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [ { query: ALL_AUTHORS } ]\n  })\n\n  if (!props.show) {\n    return null\n  }\n  return (\n    <div>\n      <h2>authors</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              born\n            </th>\n            <th>\n              books\n            </th>\n          </tr>\n          {props.authors.map(a =>\n            <tr key={a.name}>\n              <td>{a.name}</td>\n              <td>{a.born}</td>\n              <td>{a.bookCount}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div>\n        <h3>Set birthyear</h3>\n        <Select \n          options={\n            props.authors.map(\n              a => { \n                return { value: a.name, label: a.name } \n              }\n            )\n          }\n          onChange={ (e) => setAuthor(e.value) }\n        />\n        <input\n          type='number'\n          value={published}\n          onChange={({ target }) => setPublished(target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Authors"]},"metadata":{},"sourceType":"module"}