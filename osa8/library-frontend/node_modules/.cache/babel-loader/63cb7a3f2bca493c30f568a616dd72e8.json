{"ast":null,"code":"var _jsxFileName = \"/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport Login from './components/Login';\nimport { useQuery, useMutation, useApolloClient } from '@apollo/client';\nimport { ALL_AUTHORS, ALL_BOOKS, ADD_BOOK, LOGIN } from './querys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [page, setPage] = useState('authors');\n  const [token, setToken] = useState(null);\n  const author_result = useQuery(ALL_AUTHORS);\n  const authors = author_result.data ? author_result.data.allAuthors : [];\n  const book_result = useQuery(ALL_BOOKS);\n  const books = book_result.data ? book_result.data.allBooks : [];\n  const client = useApolloClient();\n  const [addBook] = useMutation(ADD_BOOK, {\n    refetchQueries: [{\n      query: ALL_BOOKS\n    }, {\n      query: ALL_AUTHORS\n    }]\n  });\n  const [sendLogin, result] = useMutation(LOGIN, {// onError: (error) => {\n    //   setError(error.graphQLErrors[0].message)\n    // } \n  });\n  useEffect(() => {\n    console.log(result);\n\n    if (result.data) {\n      const token = result.data.login.value;\n      setToken(token);\n      localStorage.setItem('phonenumbers-user-token', token);\n    }\n  }, [result.data]);\n\n  const addNewBook = book => {\n    console.log(book);\n    addBook({\n      variables: { ...book,\n        published: parseInt(book.published)\n      }\n    });\n  };\n\n  const login = async user => {\n    const token = await sendLogin({\n      variables: user\n    });\n    setToken(token);\n    setPage('books');\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n    setPage('login');\n  }; // if (!token) {\n  //   return (\n  //     <div>\n  //       <Notify errorMessage={errorMessage} />\n  //       <h2>Login</h2>\n  //       <LoginForm\n  //         setToken={setToken}\n  //         setError={notify}\n  //       />\n  //     </div>\n  //   )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('authors'),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('books'),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('add'),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this), !token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('login'),\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), !!token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => logout(),\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      authors: authors,\n      show: page === 'authors'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      books: books,\n      show: page === 'books'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      add: _ => {\n        addNewBook(_);\n      },\n      show: page === 'add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      login: _ => {\n        login(_);\n      },\n      show: page === 'login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"AKk3TfTI7wEEfd6Gg3iIsNwTBIw=\", false, function () {\n  return [useQuery, useQuery, useApolloClient, useMutation, useMutation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/App.js"],"names":["React","useState","useEffect","Authors","Books","NewBook","Login","useQuery","useMutation","useApolloClient","ALL_AUTHORS","ALL_BOOKS","ADD_BOOK","LOGIN","App","page","setPage","token","setToken","author_result","authors","data","allAuthors","book_result","books","allBooks","client","addBook","refetchQueries","query","sendLogin","result","console","log","login","value","localStorage","setItem","addNewBook","book","variables","published","parseInt","user","logout","clear","resetStore","_"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport Login from './components/Login'\nimport { useQuery, useMutation, useApolloClient } from '@apollo/client'\nimport { ALL_AUTHORS, ALL_BOOKS, ADD_BOOK, LOGIN } from './querys'\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n  const [token, setToken] = useState(null)\n\n  const author_result = useQuery(ALL_AUTHORS)\n  const authors = author_result.data ? author_result.data.allAuthors : []\n\n  const book_result = useQuery(ALL_BOOKS)\n  const books = book_result.data ? book_result.data.allBooks : []\n  \n  const client = useApolloClient()\n\n  const [ addBook ] = useMutation(ADD_BOOK, {\n    refetchQueries: [ { query: ALL_BOOKS }, { query: ALL_AUTHORS } ]\n  })\n\n  const [ sendLogin, result ] = useMutation(LOGIN, {\n    // onError: (error) => {\n    //   setError(error.graphQLErrors[0].message)\n    // } \n  })\n\n  useEffect(() => {\n    console.log(result)\n    if ( result.data ) {\n      const token = result.data.login.value\n      setToken(token)\n      localStorage.setItem('phonenumbers-user-token', token)\n    }\n  }, [result.data])\n\n  const addNewBook = (book) => {\n    console.log(book)\n    addBook({ variables: {...book, published: parseInt(book.published)} })\n  }\n\n  const login = async (user) => {\n    const token = await sendLogin({ variables: user})\n    setToken(token)\n    setPage('books')\n  }\n\n  const logout = () => {\n    setToken(null)\n    localStorage.clear()\n    client.resetStore()\n    setPage('login')\n  }\n\n  // if (!token) {\n  //   return (\n  //     <div>\n  //       <Notify errorMessage={errorMessage} />\n  //       <h2>Login</h2>\n  //       <LoginForm\n  //         setToken={setToken}\n  //         setError={notify}\n  //       />\n  //     </div>\n  //   )\n  // }\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        { token && <button onClick={() => setPage('add')}>add book</button> }\n        { !token && <button onClick={() => setPage('login')}>login</button> }\n        { !!token && <button onClick={() => logout()}>logout</button> }\n      </div>\n\n      <Authors\n        authors={authors}\n        show={page === 'authors'}\n      />\n\n      <Books\n        books={books}\n        show={page === 'books'}\n      />\n\n      <NewBook\n        add={(_) => { addNewBook(_) }}\n        show={page === 'add'}\n      />\n\n      <Login\n        login={(_) => { login(_) }}\n        show={page === 'login'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}