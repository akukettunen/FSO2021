{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const ALL_BOOKS = gql`\nquery {\n  allBooks {\n    author {\n      name\n    }\n    title\n    published\n    id\n    genres\n  }\n} \n`;\nexport const ADD_BOOK = gql`\nmutation($title: String!, $published: Int!, $author: String!, $genres: [String!]!) {\n  addBook(\n    title: $title, \n    published: $published, \n    author: $author, \n    genres: $genres\n  ) {\n    title\n    author {\n      name\n    }\n  }\n}\n`;\nexport const ALL_AUTHORS = gql`\nquery {\n  allAuthors {\n    name\n    born\n    bookCount\n  }\n}\n`;\nexport const EDIT_AUTHOR = gql`\nmutation($name: String!, $setBorn: Int!) {\n  editAuthor(name: $name, setBorn: $setBorn) {\n    name\n    born\n    bookCount\n  }\n}\n`;\nexport const LOGIN = gql`\nmutation($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    value\n  }\n}\n`;","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/querys.js"],"names":["gql","ALL_BOOKS","ADD_BOOK","ALL_AUTHORS","EDIT_AUTHOR","LOGIN"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,SAAS,GAAGD,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAcP,OAAO,MAAME,QAAQ,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;AAgBP,OAAO,MAAMG,WAAW,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AAUP,OAAO,MAAMI,WAAW,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AAUP,OAAO,MAAMK,KAAK,GAAGL,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CANO","sourcesContent":["import { gql } from '@apollo/client'\n\nexport const ALL_BOOKS = gql`\nquery {\n  allBooks {\n    author {\n      name\n    }\n    title\n    published\n    id\n    genres\n  }\n} \n`\n\nexport const ADD_BOOK = gql`\nmutation($title: String!, $published: Int!, $author: String!, $genres: [String!]!) {\n  addBook(\n    title: $title, \n    published: $published, \n    author: $author, \n    genres: $genres\n  ) {\n    title\n    author {\n      name\n    }\n  }\n}\n`\n\nexport const ALL_AUTHORS = gql`\nquery {\n  allAuthors {\n    name\n    born\n    bookCount\n  }\n}\n`\n\nexport const EDIT_AUTHOR = gql`\nmutation($name: String!, $setBorn: Int!) {\n  editAuthor(name: $name, setBorn: $setBorn) {\n    name\n    born\n    bookCount\n  }\n}\n`\n\nexport const LOGIN = gql`\nmutation($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    value\n  }\n}\n`"]},"metadata":{},"sourceType":"module"}