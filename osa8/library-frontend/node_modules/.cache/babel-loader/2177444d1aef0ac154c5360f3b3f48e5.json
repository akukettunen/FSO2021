{"ast":null,"code":"var _jsxFileName = \"/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport Login from './components/Login';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { ALL_AUTHORS, ALL_BOOKS, ADD_BOOK, LOGIN } from './querys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [page, setPage] = useState('authors');\n  const [token, setToken] = useState(null);\n  const author_result = useQuery(ALL_AUTHORS);\n  const authors = author_result.data ? author_result.data.allAuthors : [];\n  const book_result = useQuery(ALL_BOOKS);\n  const books = book_result.data ? book_result.data.allBooks : [];\n  const [addBook] = useMutation(ADD_BOOK, {\n    refetchQueries: [{\n      query: ALL_BOOKS\n    }, {\n      query: ALL_AUTHORS\n    }]\n  });\n  const [sendLogin] = useMutation(LOGIN, {// refetchQueries: [ { query: ALL_BOOKS }, { query: ALL_AUTHORS } ]\n  });\n\n  const addNewBook = book => {\n    console.log(book);\n    addBook({\n      variables: { ...book,\n        published: parseInt(book.published)\n      }\n    });\n  };\n\n  const login = async user => {\n    alert(JSON.stringify(user));\n    const token = await sendLogin({\n      variables: user\n    });\n    setToken(token);\n    setPage('books');\n  };\n\n  const logout = () => {\n    setToken(null);\n    setPage('login');\n  }; // if (!token) {\n  //   return (\n  //     <div>\n  //       <Notify errorMessage={errorMessage} />\n  //       <h2>Login</h2>\n  //       <LoginForm\n  //         setToken={setToken}\n  //         setError={notify}\n  //       />\n  //     </div>\n  //   )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('authors'),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('books'),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('add'),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('login'),\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => logout(),\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      authors: authors,\n      show: page === 'authors'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      books: books,\n      show: page === 'books'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      add: _ => {\n        addNewBook(_);\n      },\n      show: page === 'add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      login: _ => {\n        login(_);\n      },\n      show: page === 'login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"B5w1eWnwzWqmru9V+oI6L8gh7Ds=\", false, function () {\n  return [useQuery, useQuery, useMutation, useMutation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","Login","useQuery","useMutation","ALL_AUTHORS","ALL_BOOKS","ADD_BOOK","LOGIN","App","page","setPage","token","setToken","author_result","authors","data","allAuthors","book_result","books","allBooks","addBook","refetchQueries","query","sendLogin","addNewBook","book","console","log","variables","published","parseInt","login","user","alert","JSON","stringify","logout","_"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport Login from './components/Login'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { ALL_AUTHORS, ALL_BOOKS, ADD_BOOK, LOGIN } from './querys'\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n  const [token, setToken] = useState(null)\n\n  const author_result = useQuery(ALL_AUTHORS)\n  const authors = author_result.data ? author_result.data.allAuthors : []\n\n  const book_result = useQuery(ALL_BOOKS)\n  const books = book_result.data ? book_result.data.allBooks : []\n\n  const [ addBook ] = useMutation(ADD_BOOK, {\n    refetchQueries: [ { query: ALL_BOOKS }, { query: ALL_AUTHORS } ]\n  })\n\n  const [ sendLogin ] = useMutation(LOGIN, {\n    // refetchQueries: [ { query: ALL_BOOKS }, { query: ALL_AUTHORS } ]\n  })\n\n  const addNewBook = (book) => {\n    console.log(book)\n    addBook({ variables: {...book, published: parseInt(book.published)} })\n  }\n\n  const login = async (user) => {\n    alert(JSON.stringify(user))\n    const token = await sendLogin({ variables: user})\n    setToken(token)\n    setPage('books')\n  }\n\n  const logout = () => {\n    setToken(null)\n    setPage('login')\n  }\n\n  // if (!token) {\n  //   return (\n  //     <div>\n  //       <Notify errorMessage={errorMessage} />\n  //       <h2>Login</h2>\n  //       <LoginForm\n  //         setToken={setToken}\n  //         setError={notify}\n  //       />\n  //     </div>\n  //   )\n  // }\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        { token && <button onClick={() => setPage('add')}>add book</button> }\n        <button onClick={() => setPage('login')}>login</button>\n        { !token && <button onClick={() => logout()}>logout</button> }\n      </div>\n\n      <Authors\n        authors={authors}\n        show={page === 'authors'}\n      />\n\n      <Books\n        books={books}\n        show={page === 'books'}\n      />\n\n      <NewBook\n        add={(_) => { addNewBook(_) }}\n        show={page === 'add'}\n      />\n\n      <Login\n        login={(_) => { login(_) }}\n        show={page === 'login'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}