{"ast":null,"code":"var _jsxFileName = \"/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/components/Recommended.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authors = props => {\n  _s();\n\n  const [author, setAuthor] = useState('');\n  const [published, setPublished] = useState('');\n  const [editAuthor] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }]\n  });\n\n  const changeYear = () => {\n    editAuthor({\n      variables: {\n        name: author,\n        setBorn: parseInt(published)\n      }\n    });\n    setPublished('');\n    setAuthor('');\n  };\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"born\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), props.authors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.born\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.bookCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, a.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Set birthyear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: props.authors.map(a => {\n          return {\n            value: a.name,\n            label: a.name\n          };\n        }),\n        onChange: e => setAuthor(e.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: published,\n        onChange: ({\n          target\n        }) => setPublished(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeYear();\n        },\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authors, \"o52iB1FaZ3Z7Cs8C6vsnYuzvsKc=\", true);\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/components/Recommended.js"],"names":["React","useState","Select","Authors","props","author","setAuthor","published","setPublished","editAuthor","useMutation","EDIT_AUTHOR","refetchQueries","query","ALL_AUTHORS","changeYear","variables","name","setBorn","parseInt","show","authors","map","a","born","bookCount","value","label","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAAEQ,UAAF,IAAiBC,WAAW,CAACC,WAAD,EAAc;AAC9CC,IAAAA,cAAc,EAAE,CAAE;AAAEC,MAAAA,KAAK,EAAEC;AAAT,KAAF;AAD8B,GAAd,CAAlC;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBN,IAAAA,UAAU,CAAC;AAAEO,MAAAA,SAAS,EAAE;AAACC,QAAAA,IAAI,EAAEZ,MAAP;AAAea,QAAAA,OAAO,EAAEC,QAAQ,CAACZ,SAAD;AAAhC;AAAb,KAAD,CAAV;AACAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAJD;;AAMA,MAAI,CAACF,KAAK,CAACgB,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAUGhB,KAAK,CAACiB,OAAN,CAAcC,GAAd,CAAkBC,CAAC,iBAClB;AAAA,kCACE;AAAA,sBAAKA,CAAC,CAACN;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKM,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASF,CAAC,CAACN,IAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAsBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EACLb,KAAK,CAACiB,OAAN,CAAcC,GAAd,CACEC,CAAC,IAAI;AACH,iBAAO;AAAEG,YAAAA,KAAK,EAAEH,CAAC,CAACN,IAAX;AAAiBU,YAAAA,KAAK,EAAEJ,CAAC,CAACN;AAA1B,WAAP;AACD,SAHH,CAFJ;AAQE,QAAA,QAAQ,EAAIW,CAAD,IAAOtB,SAAS,CAACsB,CAAC,CAACF,KAAH;AAR7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAEnB,SAFT;AAGE,QAAA,QAAQ,EAAE,CAAC;AAAEsB,UAAAA;AAAF,SAAD,KAAgBrB,YAAY,CAACqB,MAAM,CAACH,KAAR;AAHxC;AAAA;AAAA;AAAA;AAAA,cAZF,eAiBE;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEX,UAAAA,UAAU;AAAI,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CA7DD;;GAAMZ,O;;KAAAA,O;AA+DN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Select from 'react-select'\n\nconst Authors = (props) => {\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n\n  const [ editAuthor ] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [ { query: ALL_AUTHORS } ]\n  })\n\n  const changeYear = () => {\n    editAuthor({ variables: {name: author, setBorn: parseInt(published)} })\n    setPublished('')\n    setAuthor('')\n  }\n\n  if (!props.show) {\n    return null\n  }\n  return (\n    <div>\n      <h2>authors</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              born\n            </th>\n            <th>\n              books\n            </th>\n          </tr>\n          {props.authors.map(a =>\n            <tr key={a.name}>\n              <td>{a.name}</td>\n              <td>{a.born}</td>\n              <td>{a.bookCount}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div>\n        <h3>Set birthyear</h3>\n        <Select \n          options={\n            props.authors.map(\n              a => { \n                return { value: a.name, label: a.name } \n              }\n            )\n          }\n          onChange={ (e) => setAuthor(e.value) }\n        />\n        <input\n          type='number'\n          value={published}\n          onChange={({ target }) => setPublished(target.value)}\n        />\n        <button onClick={() => { changeYear() }}>save</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Authors"]},"metadata":{},"sourceType":"module"}