{"ast":null,"code":"var _jsxFileName = \"/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/components/Recommended.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ME } from '../querys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authors = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useEffect(_s(() => {\n    _s();\n\n    const me_query = useQuery(ME);\n    const me = me_query.data ? me_query.data.me : null;\n  }, \"zu3tTjouYWa7FWluK8zMp+LRLg0=\", false, function () {\n    return [useQuery];\n  }), [props.show]);\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (!props.show) return '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"books of your favorite genre \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: me.favoriteGenre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), props.books.filter(book => {\n          if (!me.favoriteGenre) return true;\n          return book.genres.includes(me.favoriteGenre);\n        }).map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author ? a.author.name : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Authors, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/akukettunen/Desktop/FS2021/osa8/library-frontend/src/components/Recommended.js"],"names":["React","useEffect","useQuery","ME","Authors","props","me_query","me","data","show","favoriteGenre","books","filter","book","genres","includes","map","a","title","author","name","published"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,EAAT,QAAmB,WAAnB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACzBJ,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACd,UAAMK,QAAQ,GAAGJ,QAAQ,CAACC,EAAD,CAAzB;AACA,UAAMI,EAAE,GAAGD,QAAQ,CAACE,IAAT,GAAgBF,QAAQ,CAACE,IAAT,CAAcD,EAA9B,GAAmC,IAA9C;AACD,GAHQ;AAAA,YACUL,QADV;AAAA,MAGN,CAACG,KAAK,CAACI,IAAP,CAHM,CAAT;;AAIA,MAAI,CAACJ,KAAK,CAACI,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAG,CAACJ,KAAK,CAACI,IAAV,EAAgB,OAAO,EAAP;AAEhB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,+DAAkC;AAAA,kBAASF,EAAE,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAWIL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAAI;AACzB,cAAG,CAACN,EAAE,CAACG,aAAP,EAAsB,OAAO,IAAP;AACtB,iBAAOG,IAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqBR,EAAE,CAACG,aAAxB,CAAP;AACD,SAHD,EAGGM,GAHH,CAGOC,CAAC,iBACN;AAAA,kCACE;AAAA,sBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,CAAC,CAACE,MAAF,GAAWF,CAAC,CAACE,MAAF,CAASC,IAApB,GAA2B;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASJ,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBAJF,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA1CD;;IAAMd,O;;KAAAA,O;AA4CN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { ME } from '../querys'\n\nconst Authors = (props) => {\n  useEffect(() => {\n    const me_query = useQuery(ME)\n    const me = me_query.data ? me_query.data.me : null\n  }, [props.show])\n  if (!props.show) {\n    return null\n  }\n\n  if(!props.show) return ''\n\n  return (\n    <div>\n      <h2>books</h2>\n      <div>books of your favorite genre <strong>{me.favoriteGenre}</strong></div>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              author\n            </th>\n            <th>\n              published\n            </th>\n          </tr>\n          {\n            props.books.filter(book => {\n              if(!me.favoriteGenre) return true\n              return book.genres.includes(me.favoriteGenre)\n            }).map(a =>\n              <tr key={a.title}>\n                <td>{a.title}</td>\n                <td>{a.author ? a.author.name : ''}</td>\n                <td>{a.published}</td>\n              </tr>\n            )\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Authors"]},"metadata":{},"sourceType":"module"}